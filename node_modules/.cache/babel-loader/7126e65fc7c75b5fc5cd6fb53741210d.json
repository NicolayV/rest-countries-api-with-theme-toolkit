{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport * as api from \"./config\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { controlsReducer } from \"./features/controls/controls-slice\";\nimport { countryReducer } from \"./features/countries/countries-slice\";\nimport { detailsReducer } from \"./features/details/details-slice\";\nimport { themeReducer } from \"./features/theme/theme-slice\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"theme\"]\n};\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n  controls: controlsReducer,\n  countries: countryReducer,\n  details: detailsReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: {\n      extraArgument: {\n        client: axios,\n        api: api\n      }\n    },\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme-toolkit/src/store.js"],"names":["combineReducers","configureStore","axios","api","persistStore","persistReducer","storage","controlsReducer","countryReducer","detailsReducer","themeReducer","persistConfig","key","whitelist","rootReducer","theme","controls","countries","details","persistedReducer","store","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","client","serializableCheck","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,UAArB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHS,CAAtB;AAMA,MAAMC,WAAW,GAAGd,eAAe,CAAC;AAClCe,EAAAA,KAAK,EAAEL,YAD2B;AAElCM,EAAAA,QAAQ,EAAET,eAFwB;AAGlCU,EAAAA,SAAS,EAAET,cAHuB;AAIlCU,EAAAA,OAAO,EAAET;AAJyB,CAAD,CAAnC;AAOA,MAAMU,gBAAgB,GAAGd,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMM,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAEF,gBADyB;AAElCG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAExB,KADK;AAEbC,QAAAA,GAAG,EAAEA;AAFQ;AADV,KADY;AAOnBwB,IAAAA,iBAAiB,EAAE;AAPA,GAAD;AAHY,CAAD,CAA5B;AAcP,OAAO,MAAMC,SAAS,GAAGxB,YAAY,CAACgB,KAAD,CAA9B","sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nimport * as api from \"./config\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport { controlsReducer } from \"./features/controls/controls-slice\";\nimport { countryReducer } from \"./features/countries/countries-slice\";\nimport { detailsReducer } from \"./features/details/details-slice\";\nimport { themeReducer } from \"./features/theme/theme-slice\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"theme\"],\n};\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n  controls: controlsReducer,\n  countries: countryReducer,\n  details: detailsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: {\n          client: axios,\n          api: api,\n        },\n      },\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}