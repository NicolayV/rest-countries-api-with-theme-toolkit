{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const loadCountryByName = createAsyncThunk(\"details/load-countriesByName\", async (_, _ref) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref;\n  return client.get(api.ALL_COUNTRIES);\n});\nexport const loadNeighborsByBorder = createAsyncThunk(\"details/load-NeighborsByBorder\", async (_, _ref2) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref2;\n  return client.get(api.ALL_COUNTRIES);\n});\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: []\n};\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadCountries.pending, state => {\n      state.status = \"loading\";\n      state.error = null;\n    }).addCase(loadCountries.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload || action.meta.error;\n    }).addCase(loadCountries.fulfilled, (state, action) => {\n      state.list = action.payload.data;\n      state.status = \"received\";\n    });\n  }\n});\nexport const detailsReducer = detailsSlice.reducer; // !Selectors\n\nexport const selectDetails = state => state.details;\nexport const selectCurrentCountry = state => state.details.currentCountry;\nexport const selectNeighbors = state => state.details.neighbors;","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme-toolkit/src/features/details/details-slice.js"],"names":["createAsyncThunk","createSlice","loadCountryByName","_","extra","client","api","get","ALL_COUNTRIES","loadNeighborsByBorder","initialState","status","currentCountry","error","neighbors","detailsSlice","name","reducers","extraReducers","builder","addCase","loadCountries","pending","state","rejected","action","payload","meta","fulfilled","list","data","detailsReducer","reducer","selectDetails","details","selectCurrentCountry","selectNeighbors"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC/C,8BAD+C,EAE/C,OAAOG,CAAP,WAAyC;AAAA,MAA/B;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAT,GAA+B;AACvC,SAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,aAAf,CAAP;AACD,CAJ8C,CAA1C;AAMP,OAAO,MAAMC,qBAAqB,GAAGT,gBAAgB,CACnD,gCADmD,EAEnD,OAAOG,CAAP,YAAyC;AAAA,MAA/B;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAT,GAA+B;AACvC,SAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,aAAf,CAAP;AACD,CAJkD,CAA9C;AAOP,MAAME,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,MADW;AAEnBC,EAAAA,cAAc,EAAE,IAFG;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,MAAMC,YAAY,GAAGd,WAAW,CAAC;AAC/Be,EAAAA,IAAI,EAAE,WADyB;AAE/BN,EAAAA,YAF+B;AAG/BO,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWC,aAAa,CAACC,OADzB,EACmCC,KAAD,IAAW;AACzCA,MAAAA,KAAK,CAACZ,MAAN,GAAe,SAAf;AACAY,MAAAA,KAAK,CAACV,KAAN,GAAc,IAAd;AACD,KAJH,EAKGO,OALH,CAKWC,aAAa,CAACG,QALzB,EAKmC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAClDF,MAAAA,KAAK,CAACZ,MAAN,GAAe,UAAf;AACAY,MAAAA,KAAK,CAACV,KAAN,GAAcY,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACE,IAAP,CAAYd,KAA5C;AACD,KARH,EASGO,OATH,CASWC,aAAa,CAACO,SATzB,EASoC,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACnDF,MAAAA,KAAK,CAACM,IAAN,GAAaJ,MAAM,CAACC,OAAP,CAAeI,IAA5B;AACAP,MAAAA,KAAK,CAACZ,MAAN,GAAe,UAAf;AACD,KAZH;AAaD;AAlB8B,CAAD,CAAhC;AAqBA,OAAO,MAAMoB,cAAc,GAAGhB,YAAY,CAACiB,OAApC,C,CAEP;;AACA,OAAO,MAAMC,aAAa,GAAIV,KAAD,IAAWA,KAAK,CAACW,OAAvC;AACP,OAAO,MAAMC,oBAAoB,GAAIZ,KAAD,IAAWA,KAAK,CAACW,OAAN,CAActB,cAAtD;AACP,OAAO,MAAMwB,eAAe,GAAIb,KAAD,IAAWA,KAAK,CAACW,OAAN,CAAcpB,SAAjD","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const loadCountryByName = createAsyncThunk(\n  \"details/load-countriesByName\",\n  async (_, { extra: { client, api } }) => {\n    return client.get(api.ALL_COUNTRIES);\n  }\n);\nexport const loadNeighborsByBorder = createAsyncThunk(\n  \"details/load-NeighborsByBorder\",\n  async (_, { extra: { client, api } }) => {\n    return client.get(api.ALL_COUNTRIES);\n  }\n);\n\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: [],\n};\n\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadCountries.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(loadCountries.rejected, (state, action) => {\n        state.status = \"rejected\";\n        state.error = action.payload || action.meta.error;\n      })\n      .addCase(loadCountries.fulfilled, (state, action) => {\n        state.list = action.payload.data;\n        state.status = \"received\";\n      });\n  },\n});\n\nexport const detailsReducer = detailsSlice.reducer;\n\n// !Selectors\nexport const selectDetails = (state) => state.details;\nexport const selectCurrentCountry = (state) => state.details.currentCountry;\nexport const selectNeighbors = (state) => state.details.neighbors;\n"]},"metadata":{},"sourceType":"module"}