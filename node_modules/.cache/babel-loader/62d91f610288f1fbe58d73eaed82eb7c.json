{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const loadCountryByName = createAsyncThunk(\"details/load-country-by-name\", (name, _ref) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref;\n  return client.get(api.searchByCountry(name));\n});\nexport const loadNeighborsByBorder = createAsyncThunk(\"details/load-neighbors-by-border\", (borders, _ref2) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref2;\n  return client.get(api.filterByCode(borders));\n});\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: []\n};\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {\n    clearDetails: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(loadCountryByName.fulfilled, (state, action) => {\n      state.currentCountry = action.payload.data[0];\n      state.status = \"idle\";\n    }).addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n      state.neighbors = action.payload.data.map(country => country.name);\n      state.status = \"idle\";\n    }).addMatcher(action => action.type.endsWith(\"/rejected\"), (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload || action.meta.error;\n    }).addMatcher(action => action.type.endsWith(\"/pending\"), state => {\n      state.status = \"loading\";\n      state.error = null;\n    });\n  }\n});\nexport const detailsReducer = detailsSlice.reducer;\nexport const {\n  clearDetails\n} = detailsSlice.actions; // !Selectors\n\nexport const selectDetails = state => state.details;\nexport const selectCurrentCountry = state => state.details.currentCountry;\nexport const selectNeighbors = state => state.details.neighbors;","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme-toolkit/src/features/details/details-slice.js"],"names":["createAsyncThunk","createSlice","loadCountryByName","name","extra","client","api","get","searchByCountry","loadNeighborsByBorder","borders","filterByCode","initialState","status","currentCountry","error","neighbors","detailsSlice","reducers","clearDetails","extraReducers","builder","addCase","fulfilled","state","action","payload","data","map","country","addMatcher","type","endsWith","meta","detailsReducer","reducer","actions","selectDetails","details","selectCurrentCountry","selectNeighbors"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const loadCountryByName = createAsyncThunk(\n  \"details/load-country-by-name\",\n  (name, { extra: { client, api } }) => {\n    return client.get(api.searchByCountry(name));\n  }\n);\nexport const loadNeighborsByBorder = createAsyncThunk(\n  \"details/load-neighbors-by-border\",\n  (borders, { extra: { client, api } }) => {\n    return client.get(api.filterByCode(borders));\n  }\n);\n\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: [],\n};\n\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {\n    clearDetails: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadCountryByName.fulfilled, (state, action) => {\n        state.currentCountry = action.payload.data[0];\n        state.status = \"idle\";\n      })\n      .addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n        state.neighbors = action.payload.data.map((country) => country.name);\n        state.status = \"idle\";\n      })\n\n      .addMatcher(\n        (action) => action.type.endsWith(\"/rejected\"),\n        (state, action) => {\n          state.status = \"rejected\";\n          state.error = action.payload || action.meta.error;\n        }\n      )\n      .addMatcher(\n        (action) => action.type.endsWith(\"/pending\"),\n        (state) => {\n          state.status = \"loading\";\n          state.error = null;\n        }\n      );\n  },\n});\n\nexport const detailsReducer = detailsSlice.reducer;\nexport const { clearDetails } = detailsSlice.actions;\n\n// !Selectors\nexport const selectDetails = (state) => state.details;\nexport const selectCurrentCountry = (state) => state.details.currentCountry;\nexport const selectNeighbors = (state) => state.details.neighbors;\n"]},"metadata":{},"sourceType":"module"}