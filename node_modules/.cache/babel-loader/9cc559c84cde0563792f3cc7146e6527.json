{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const loadCountryByName = createAsyncThunk(\"details/load-countriesByName\", async (name, _ref) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref;\n  return client.get(api.searchByCountry(name)); //   .then(({ data }) => dispatch(setCountry(data[0])))\n  //   .catch((err) => dispatch(setError(err.message)));\n});\nexport const loadNeighborsByBorder = createAsyncThunk(\"details/load-NeighborsByBorder\", async (borders, _ref2) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref2;\n  return client.get(api.filterByCode(borders)); // .then(({ data }) => dispatch(setNeighbors(data.map((c) => c.name))))\n  // .catch(console.error);\n});\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: []\n};\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadCountryByName.pending, state => {\n      state.status = \"loading\";\n      state.error = null;\n    }).addCase(loadCountryByName.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload || action.meta.error;\n    }).addCase(loadCountryByName.fulfilled, (state, action) => {\n      state.currentCountry = action.payload.data;\n      state.status = \"received\";\n    }).addCase(loadNeighborsByBorder.pending, state => {\n      state.status = \"loading\";\n      state.error = null;\n    }).addCase(loadNeighborsByBorder.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload || action.meta.error;\n    }).addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n      state.neighbors = action.payload.data;\n      state.status = \"received\";\n    });\n  }\n});\nexport const detailsReducer = detailsSlice.reducer; // !Selectors\n\nexport const selectDetails = state => state.details;\nexport const selectCurrentCountry = state => state.details.currentCountry;\nexport const selectNeighbors = state => state.details.neighbors;","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme-toolkit/src/features/details/details-slice.js"],"names":["createAsyncThunk","createSlice","loadCountryByName","name","extra","client","api","get","searchByCountry","loadNeighborsByBorder","borders","filterByCode","initialState","status","currentCountry","error","neighbors","detailsSlice","reducers","extraReducers","builder","addCase","pending","state","rejected","action","payload","meta","fulfilled","data","detailsReducer","reducer","selectDetails","details","selectCurrentCountry","selectNeighbors"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const loadCountryByName = createAsyncThunk(\n  \"details/load-countriesByName\",\n  async (name, { extra: { client, api } }) => {\n    return client.get(api.searchByCountry(name));\n    //   .then(({ data }) => dispatch(setCountry(data[0])))\n    //   .catch((err) => dispatch(setError(err.message)));\n  }\n);\nexport const loadNeighborsByBorder = createAsyncThunk(\n  \"details/load-NeighborsByBorder\",\n  async (borders, { extra: { client, api } }) => {\n    return client.get(api.filterByCode(borders));\n    // .then(({ data }) => dispatch(setNeighbors(data.map((c) => c.name))))\n    // .catch(console.error);\n  }\n);\n\nconst initialState = {\n  status: \"idle\",\n  currentCountry: null,\n  error: null,\n  neighbors: [],\n};\n\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadCountryByName.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(loadCountryByName.rejected, (state, action) => {\n        state.status = \"rejected\";\n        state.error = action.payload || action.meta.error;\n      })\n      .addCase(loadCountryByName.fulfilled, (state, action) => {\n        state.currentCountry = action.payload.data;\n        state.status = \"received\";\n      })\n      .addCase(loadNeighborsByBorder.pending, (state) => {\n        state.status = \"loading\";\n        state.error = null;\n      })\n      .addCase(loadNeighborsByBorder.rejected, (state, action) => {\n        state.status = \"rejected\";\n        state.error = action.payload || action.meta.error;\n      })\n      .addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n        state.neighbors = action.payload.data;\n        state.status = \"received\";\n      });\n  },\n});\n\nexport const detailsReducer = detailsSlice.reducer;\n\n// !Selectors\nexport const selectDetails = (state) => state.details;\nexport const selectCurrentCountry = (state) => state.details.currentCountry;\nexport const selectNeighbors = (state) => state.details.neighbors;\n"]},"metadata":{},"sourceType":"module"}