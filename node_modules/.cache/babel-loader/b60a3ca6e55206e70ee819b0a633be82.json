{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport axios from \"axios\";\nimport { rootReducer } from \"./rootReducer\";\nimport * as api from \"../config\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  storage //   whitelist: [\"positions\", \"filters\"],\n  // blacklist: [\"positions\"],\n\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n  client: axios,\n  api\n})));\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = createStore(rootReducer, enhancer);","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme/src/store/index.js"],"names":["createStore","compose","applyMiddleware","thunk","persistStore","persistReducer","axios","rootReducer","api","storage","persistConfig","key","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","withExtraArgument","client","persistedReducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB,CAGpB;AACA;;AAJoB,CAAtB;AAOA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cb,OAAxE;AAEA,MAAMc,QAAQ,GAAGH,gBAAgB,CAC/BV,eAAe,CAACC,KAAK,CAACa,iBAAN,CAAwB;AAAEC,EAAAA,MAAM,EAAEX,KAAV;AAAiBE,EAAAA;AAAjB,CAAxB,CAAD,CADgB,CAAjC;AAIA,MAAMU,gBAAgB,GAAGb,cAAc,CAACK,aAAD,EAAgBH,WAAhB,CAAvC;AACA,OAAO,MAAMY,KAAK,GAAGnB,WAAW,CAACO,WAAD,EAAcQ,QAAd,CAAzB","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport axios from \"axios\";\n\nimport { rootReducer } from \"./rootReducer\";\nimport * as api from \"../config\";\n\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  //   whitelist: [\"positions\", \"filters\"],\n  // blacklist: [\"positions\"],\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk.withExtraArgument({ client: axios, api }))\n);\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = createStore(rootReducer, enhancer);\n"]},"metadata":{},"sourceType":"module"}