{"ast":null,"code":"export const SET_LOADING = \"@@details/SET_LOADING\";\nexport const SET_ERROR = \"@@details/SET_ERROR\";\nexport const SET_COUNTRY = \"@@details/SET_COUNTRY\";\nexport const CLEAR_DETAILS = \"@@details/CLEAR_DETAILS\";\nexport const SET_NEIGHBORS = \"@@details/SET_NEIGHBORS\";\n\nconst setLoading = () => ({\n  type: SET_LOADING\n});\n\nconst setCountry = country => ({\n  type: SET_COUNTRY,\n  payload: country\n});\n\nconst setError = err => ({\n  type: SET_ERROR,\n  payload: err\n});\n\nexport const clearDetails = () => ({\n  type: CLEAR_DETAILS\n});\n\nconst setNeighbors = countries => ({\n  type: SET_NEIGHBORS,\n  payload: countries\n});\n\nexport const loadCountryByName = name => (dispatch, _, _ref) => {\n  let {\n    client,\n    api\n  } = _ref;\n  dispatch(setLoading());\n  client.get(api.searchByCountry(name)).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n    return dispatch(setCountry(data[0]));\n  }).catch(err => dispatch(setError(err.message)));\n};\nexport const loadNeighborsByBorder = codes => (dispatch, _, _ref3) => {\n  let {\n    client,\n    api\n  } = _ref3;\n  dispatch();\n  client.get(api.filterByCode(codes).then(_ref4 => {\n    let {\n      data\n    } = _ref4;\n    return dispatch();\n  }).catch(err => dispatch()));\n};","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme/src/store/details/details-actions.js"],"names":["SET_LOADING","SET_ERROR","SET_COUNTRY","CLEAR_DETAILS","SET_NEIGHBORS","setLoading","type","setCountry","country","payload","setError","err","clearDetails","setNeighbors","countries","loadCountryByName","name","dispatch","_","client","api","get","searchByCountry","then","data","catch","message","loadNeighborsByBorder","codes","filterByCode"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,uBAApB;AACP,OAAO,MAAMC,SAAS,GAAG,qBAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,uBAApB;AACP,OAAO,MAAMC,aAAa,GAAG,yBAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,yBAAtB;;AAEP,MAAMC,UAAU,GAAG,OAAO;AACxBC,EAAAA,IAAI,EAAEN;AADkB,CAAP,CAAnB;;AAIA,MAAMO,UAAU,GAAIC,OAAD,KAAc;AAC/BF,EAAAA,IAAI,EAAEJ,WADyB;AAE/BO,EAAAA,OAAO,EAAED;AAFsB,CAAd,CAAnB;;AAKA,MAAME,QAAQ,GAAIC,GAAD,KAAU;AACzBL,EAAAA,IAAI,EAAEL,SADmB;AAEzBQ,EAAAA,OAAO,EAAEE;AAFgB,CAAV,CAAjB;;AAKA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjCN,EAAAA,IAAI,EAAEH;AAD2B,CAAP,CAArB;;AAIP,MAAMU,YAAY,GAAIC,SAAD,KAAgB;AACnCR,EAAAA,IAAI,EAAEF,aAD6B;AAEnCK,EAAAA,OAAO,EAAEK;AAF0B,CAAhB,CAArB;;AAKA,OAAO,MAAMC,iBAAiB,GAC3BC,IAAD,IACA,CAACC,QAAD,EAAWC,CAAX,WAAkC;AAAA,MAApB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAoB;AAChCH,EAAAA,QAAQ,CAACZ,UAAU,EAAX,CAAR;AAEAc,EAAAA,MAAM,CACHE,GADH,CACOD,GAAG,CAACE,eAAJ,CAAoBN,IAApB,CADP,EAEGO,IAFH,CAEQ;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAcP,QAAQ,CAACV,UAAU,CAACiB,IAAI,CAAC,CAAD,CAAL,CAAX,CAAtB;AAAA,GAFR,EAGGC,KAHH,CAGUd,GAAD,IAASM,QAAQ,CAACP,QAAQ,CAACC,GAAG,CAACe,OAAL,CAAT,CAH1B;AAID,CATI;AAWP,OAAO,MAAMC,qBAAqB,GAC/BC,KAAD,IACA,CAACX,QAAD,EAAWC,CAAX,YAAkC;AAAA,MAApB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAoB;AAChCH,EAAAA,QAAQ;AAERE,EAAAA,MAAM,CAACE,GAAP,CACED,GAAG,CACAS,YADH,CACgBD,KADhB,EAEGL,IAFH,CAEQ;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAcP,QAAQ,EAAtB;AAAA,GAFR,EAGGQ,KAHH,CAGUd,GAAD,IAASM,QAAQ,EAH1B,CADF;AAMD,CAXI","sourcesContent":["export const SET_LOADING = \"@@details/SET_LOADING\";\nexport const SET_ERROR = \"@@details/SET_ERROR\";\nexport const SET_COUNTRY = \"@@details/SET_COUNTRY\";\nexport const CLEAR_DETAILS = \"@@details/CLEAR_DETAILS\";\nexport const SET_NEIGHBORS = \"@@details/SET_NEIGHBORS\";\n\nconst setLoading = () => ({\n  type: SET_LOADING,\n});\n\nconst setCountry = (country) => ({\n  type: SET_COUNTRY,\n  payload: country,\n});\n\nconst setError = (err) => ({\n  type: SET_ERROR,\n  payload: err,\n});\n\nexport const clearDetails = () => ({\n  type: CLEAR_DETAILS,\n});\n\nconst setNeighbors = (countries) => ({\n  type: SET_NEIGHBORS,\n  payload: countries,\n});\n\nexport const loadCountryByName =\n  (name) =>\n  (dispatch, _, { client, api }) => {\n    dispatch(setLoading());\n\n    client\n      .get(api.searchByCountry(name))\n      .then(({ data }) => dispatch(setCountry(data[0])))\n      .catch((err) => dispatch(setError(err.message)));\n  };\n\nexport const loadNeighborsByBorder =\n  (codes) =>\n  (dispatch, _, { client, api }) => {\n    dispatch();\n\n    client.get(\n      api\n        .filterByCode(codes)\n        .then(({ data }) => dispatch())\n        .catch((err) => dispatch())\n    );\n  };\n"]},"metadata":{},"sourceType":"module"}