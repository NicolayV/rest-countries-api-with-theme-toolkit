{"ast":null,"code":"var _jsxFileName = \"/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme/src/components/Controls.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Search } from \"./Search\";\nimport { CustomSelect } from \"./CustomSelect\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectRegion } from \"../store/controls/controls-selectors\";\nimport { setRegion } from \"../store/controls/controls-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsMap = {\n  Africa: {\n    value: \"Africa\",\n    label: \"Africa\"\n  },\n  America: {\n    value: \"America\",\n    label: \"America\"\n  },\n  Asia: {\n    value: \"Asia\",\n    label: \"Asia\"\n  },\n  Europe: {\n    value: \"Europe\",\n    label: \"Europe\"\n  },\n  Oceania: {\n    value: \"Oceania\",\n    label: \"Oceania\"\n  }\n};\nconst options = Object.values(optionsMap);\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media (min-width: 767px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n_c = Wrapper;\nexport const Controls = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const region = useSelector(selectRegion);\n\n  const handleSelect = reg => {\n    dispatch(setRegion(reg.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n      options: options,\n      placeholder: \"Filter by Region\",\n      isClearable: true,\n      isSearchable: false,\n      value: optionsMap[region],\n      onChange: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Controls, \"BgxARPltP5plG2ZRNK3ZE1Nacx8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Controls;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Controls\");","map":{"version":3,"sources":["/Users/velgoshnicolay/Projects/REDUX/rest-countries-api-with-theme/src/components/Controls.jsx"],"names":["styled","Search","CustomSelect","useDispatch","useSelector","selectRegion","setRegion","optionsMap","Africa","value","label","America","Asia","Europe","Oceania","options","Object","values","Wrapper","div","Controls","dispatch","region","handleSelect","reg"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,SAAT,QAA0B,oCAA1B;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GADS;AAEjBC,EAAAA,OAAO,EAAE;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFQ;AAGjBE,EAAAA,IAAI,EAAE;AAAEH,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAHW;AAIjBG,EAAAA,MAAM,EAAE;AAAEJ,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAJS;AAKjBI,EAAAA,OAAO,EAAE;AAAEL,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B;AALQ,CAAnB;AAOA,MAAMK,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcV,UAAd,CAAhB;AAEA,MAAMW,OAAO,GAAGlB,MAAM,CAACmB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,O;AAYN,OAAO,MAAME,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,MAAM,GAAGlB,WAAW,CAACC,YAAD,CAA1B;;AAEA,QAAMkB,YAAY,GAAIC,GAAD,IAAS;AAC5BH,IAAAA,QAAQ,CAACf,SAAS,CAACkB,GAAG,CAACf,KAAL,CAAV,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACE,MAAA,OAAO,EAAEM,OADX;AAEE,MAAA,WAAW,EAAC,kBAFd;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,YAAY,EAAE,KAJhB;AAKE,MAAA,KAAK,EAAER,UAAU,CAACe,MAAD,CALnB;AAME,MAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBM;;GAAMH,Q;UACMjB,W,EACFC,W;;;MAFJgB,Q","sourcesContent":["import styled from \"styled-components\";\n\nimport { Search } from \"./Search\";\nimport { CustomSelect } from \"./CustomSelect\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectRegion } from \"../store/controls/controls-selectors\";\nimport { setRegion } from \"../store/controls/controls-actions\";\n\nconst optionsMap = {\n  Africa: { value: \"Africa\", label: \"Africa\" },\n  America: { value: \"America\", label: \"America\" },\n  Asia: { value: \"Asia\", label: \"Asia\" },\n  Europe: { value: \"Europe\", label: \"Europe\" },\n  Oceania: { value: \"Oceania\", label: \"Oceania\" },\n};\nconst options = Object.values(optionsMap);\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media (min-width: 767px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const Controls = () => {\n  const dispatch = useDispatch();\n  const region = useSelector(selectRegion);\n\n  const handleSelect = (reg) => {\n    dispatch(setRegion(reg.value));\n  };\n\n  return (\n    <Wrapper>\n      <Search />\n      <CustomSelect\n        options={options}\n        placeholder=\"Filter by Region\"\n        isClearable\n        isSearchable={false}\n        value={optionsMap[region]}\n        onChange={handleSelect}\n      />\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}